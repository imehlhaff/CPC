[{"path":[]},{"path":"http://imehlhaff.net/CPC/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"CC0 1.0 Universal","title":"CC0 1.0 Universal","text":"CREATIVE COMMONS CORPORATION LAW FIRM PROVIDE LEGAL SERVICES. DISTRIBUTION DOCUMENT CREATE ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES INFORMATION “-” BASIS. CREATIVE COMMONS MAKES WARRANTIES REGARDING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER, DISCLAIMS LIABILITY DAMAGES RESULTING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER.","code":""},{"path":"http://imehlhaff.net/CPC/LICENSE.html","id":"statement-of-purpose","dir":"","previous_headings":"","what":"Statement of Purpose","title":"CC0 1.0 Universal","text":"laws jurisdictions throughout world automatically confer exclusive Copyright Related Rights (defined ) upon creator subsequent owner(s) (, “owner”) original work authorship /database (, “Work”). Certain owners wish permanently relinquish rights Work purpose contributing commons creative, cultural scientific works (“Commons”) public can reliably without fear later claims infringement build upon, modify, incorporate works, reuse redistribute freely possible form whatsoever purposes, including without limitation commercial purposes. owners may contribute Commons promote ideal free culture production creative, cultural scientific works, gain reputation greater distribution Work part use efforts others. /purposes motivations, without expectation additional consideration compensation, person associating CC0 Work (“Affirmer”), extent owner Copyright Related Rights Work, voluntarily elects apply CC0 Work publicly distribute Work terms, knowledge Copyright Related Rights Work meaning intended legal effect CC0 rights. Copyright Related Rights. Work made available CC0 may protected copyright related neighboring rights (“Copyright Related Rights”). Copyright Related Rights include, limited , following: right reproduce, adapt, distribute, perform, display, communicate, translate Work; moral rights retained original author(s) /performer(s); publicity privacy rights pertaining person’s image likeness depicted Work; rights protecting unfair competition regards Work, subject limitations paragraph 4(), ; rights protecting extraction, dissemination, use reuse data Work; database rights (arising Directive 96/9/EC European Parliament Council 11 March 1996 legal protection databases, national implementation thereof, including amended successor version directive); similar, equivalent corresponding rights throughout world based applicable law treaty, national implementations thereof. Waiver. greatest extent permitted , contravention , applicable law, Affirmer hereby overtly, fully, permanently, irrevocably unconditionally waives, abandons, surrenders Affirmer’s Copyright Related Rights associated claims causes action, whether now known unknown (including existing well future claims causes action), Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“Waiver”). Affirmer makes Waiver benefit member public large detriment Affirmer’s heirs successors, fully intending Waiver shall subject revocation, rescission, cancellation, termination, legal equitable action disrupt quiet enjoyment Work public contemplated Affirmer’s express Statement Purpose. Public License Fallback. part Waiver reason judged legally invalid ineffective applicable law, Waiver shall preserved maximum extent permitted taking account Affirmer’s express Statement Purpose. addition, extent Waiver judged Affirmer hereby grants affected person royalty-free, non transferable, non sublicensable, non exclusive, irrevocable unconditional license exercise Affirmer’s Copyright Related Rights Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“License”). License shall deemed effective date CC0 applied Affirmer Work. part License reason judged legally invalid ineffective applicable law, partial invalidity ineffectiveness shall invalidate remainder License, case Affirmer hereby affirms () exercise remaining Copyright Related Rights Work (ii) assert associated claims causes action respect Work, either case contrary Affirmer’s express Statement Purpose. Limitations Disclaimers. trademark patent rights held Affirmer waived, abandoned, surrendered, licensed otherwise affected document. Affirmer offers Work -makes representations warranties kind concerning Work, express, implied, statutory otherwise, including without limitation warranties title, merchantability, fitness particular purpose, non infringement, absence latent defects, accuracy, present absence errors, whether discoverable, greatest extent permissible applicable law. Affirmer disclaims responsibility clearing rights persons may apply Work use thereof, including without limitation person’s Copyright Related Rights Work. , Affirmer disclaims responsibility obtaining necessary consents, permissions rights required use Work. Affirmer understands acknowledges Creative Commons party document duty obligation respect CC0 use Work.","code":""},{"path":"http://imehlhaff.net/CPC/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Isaac Mehlhaff. Author, maintainer.","code":""},{"path":"http://imehlhaff.net/CPC/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mehlhaff ID (2022). “Measuring Political Polarization: Cluster-Polarization Coefficient.” working paper.","code":"@Article{,   title = {Measuring Political Polarization: The Cluster-Polarization Coefficient},   author = {Isaac D. Mehlhaff},   journal = {working paper},   year = {2022}, }"},{"path":"http://imehlhaff.net/CPC/index.html","id":"cpc-implementation-of-cluster-polarization-coefficient","dir":"","previous_headings":"","what":"Implementation of Cluster-Polarization Coefficient","title":"Implementation of Cluster-Polarization Coefficient","text":"Implements cluster-polarization coefficient measuring distributional polarization single multiple dimensions. Contains support hierarchical clustering, k-means, partitioning around medoids, density-based spatial clustering noise, manually imposed cluster membership. Calculates CPC adjusted CPC.","code":""},{"path":"http://imehlhaff.net/CPC/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Implementation of Cluster-Polarization Coefficient","text":"two ways easily install package R. install stable version released CRAN, install normal: install recent development version, first ensure latest version devtools installed: , run following code:","code":"install.packages(\"CPC\") library(CPC) install.packages(\"devtools\") library(devtools) devtools::install_github(\"imehlhaff/CPC\")"},{"path":"http://imehlhaff.net/CPC/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Implementation of Cluster-Polarization Coefficient","text":"users package primarily interested using easily calculate CPC given distribution numeric data. example, let us take bivariate, bimodal distribution generated following:","code":"data <- matrix(c(rnorm(50, 0, 1), rnorm(50, 5, 1)), ncol = 2, byrow = TRUE)"},{"path":"http://imehlhaff.net/CPC/index.html","id":"algorithmic-cluster-assignment","dir":"","previous_headings":"Usage","what":"Algorithmic Cluster Assignment","title":"Implementation of Cluster-Polarization Coefficient","text":"Given data generated , following call CPC() uses k-means clustering assign cluster membership observation, calculates CPC, returns numeric vector length 1: arguments fine-tune specified clustering function, particular algorithm use, can passed directly CPC(). example, following call specifies MacQueen algorithm instead default Hartigan-Wong algorithm: particular, type = \"kmeans\", algorithm guaranteed converge local optima, using large number random starts recommended. can specified nstart argument kmeans(), passed directly CPC(). wanted calculate adjusted CPC instead, need add optional adjust argument, defaults FALSE: advanced users wish evaluate output specified clustering function, optional argument model can set TRUE: case, CPC() returns list containing output specified clustering function, sums squares calculations, CPC adjusted CPC. CPC adjusted CPC automatically calculated returned list elements, adjust need specified model = TRUE.","code":"CPC(data = data, k = 2, type = \"kmeans\") CPC(data = data, k = 2, type = \"kmeans\", algorithm = \"MacQueen\") CPC(data = data, k = 2, type = \"kmeans\", adjust = TRUE) CPC(data = data, k = 2, type = \"kmeans\", model = TRUE)"},{"path":"http://imehlhaff.net/CPC/index.html","id":"manual-cluster-assignment","dir":"","previous_headings":"Usage","what":"Manual Cluster Assignment","title":"Implementation of Cluster-Polarization Coefficient","text":"case pre-specifying cluster membership theoretically justified empirically desirable, CPC can calculated user-imposed clusters. Cluster membership identified observation included calculation, identifications included column matrix data frame. update example data : CPC() can now called, type = \"manual\" calls optional arguments cols clusters denoting columns containing data cluster memberships, respectively:","code":"clusters <- matrix(c(rep(1, 25), rep(2, 25)), ncol = 1) data <- cbind(data, clusters) CPC(data = data, type = \"manual\", cols = 1:2, clusters = 3)"},{"path":"http://imehlhaff.net/CPC/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Implementation of Cluster-Polarization Coefficient","text":"cite CPC publications working papers, please use: Mehlhaff, Isaac D. “Group-Based Approach Measuring Polarization,” working paper (May 2022). https://imehlhaff.net/files/CPC_note.pdf. BibTeX users:","code":"@unpublished{Mehlhaff2022,   title = {A {{Group-Based Approach}} to {{Measuring Polarization}}},   author = {Mehlhaff, Isaac D.},   date = {2022-05},   location = {{The University of North Carolina at Chapel Hill}},   url = {https://imehlhaff.net/files/CPC_note.pdf} }"},{"path":"http://imehlhaff.net/CPC/reference/CPC.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster-Polarization Coefficient — CPC","title":"Cluster-Polarization Coefficient — CPC","text":"Implements clustering algorithms calculates cluster-polarization coefficient. Contains support hierarchical clustering, k-means clustering, partitioning around medoids, density-based spatial clustering noise, manual assignment cluster membership.","code":""},{"path":"http://imehlhaff.net/CPC/reference/CPC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster-Polarization Coefficient — CPC","text":"","code":"CPC(   data,   type,   k = NULL,   epsilon = NULL,   model = FALSE,   adjust = FALSE,   cols = NULL,   clusters = NULL,   ... )"},{"path":"http://imehlhaff.net/CPC/reference/CPC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster-Polarization Coefficient — CPC","text":"data numeric vector n x k matrix data frame. type = \"manual\", data must matrix containing vector identifying cluster membership observation, passed clusters argument. type character string giving type clustering method used. See Details. k desired number clusters. Required type one \"hclust\", \"diana\", \"kmeans\", \"pam\". epsilon radius epsilon neighborhood. Required type = \"dbscan\". model logical indicating whether clustering model output returned. Defaults FALSE. adjust logical indicating whether adjusted CPC calculated. Defaults FALSE. Note CPC adjusted CPC automatically calculated returned model = TRUE. cols columns data used CPC calculation. used type = \"manual\". clusters column data indicating cluster membership observation. used type = \"manual\". ... arguments passed functions.","code":""},{"path":"http://imehlhaff.net/CPC/reference/CPC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster-Polarization Coefficient — CPC","text":"model = TRUE, CPC() returns list components containing output specified clustering function, sums squares, CPC, adjusted CPC, associated standard errors. model = FALSE, CPC() returns numeric vector length 1 giving CPC (adjust = FALSE) adjusted CPC (adjust = TRUE).","code":""},{"path":"http://imehlhaff.net/CPC/reference/CPC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cluster-Polarization Coefficient — CPC","text":"type must take one six values: \"hclust\": agglomerative hierarchical clustering hclust(), \"diana\": divisive hierarchical clustering diana(), \"kmeans\": k-means clustering kmeans(), \"pam\": k-medoids clustering pam(), \"dbscan\": density-based clustering dbscan(), \"manual\": clustering necessary, researcher specified cluster assignments. clustering methods, additional arguments fine-tune clustering performance, specific algorithm used, passed CPC() inherited specified clustering function. particular, type = \"kmeans\", using large number random starts recommended. can specified nstart argument kmeans(), passed directly CPC(). type = \"manual\", data must contain vector identifying cluster membership observation, cols clusters must defined.","code":""},{"path":"http://imehlhaff.net/CPC/reference/CPC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster-Polarization Coefficient — CPC","text":"","code":"data <- matrix(c(rnorm(50, 0, 1), rnorm(50, 5, 1)), ncol = 2, byrow = TRUE) clusters <- matrix(c(rep(1, 25), rep(2, 25)), ncol = 1) data <- cbind(data, clusters)  CPC(data[,c(1:2)], \"kmeans\", k = 2) #> [1] 0.8921236 CPC(data, \"manual\", cols = 1:2, clusters = 3) #> [1] 0.8921236"},{"path":"http://imehlhaff.net/CPC/reference/CPCdata.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Manipulation for CPC Calculation — CPCdata.frame","title":"Data Manipulation for CPC Calculation — CPCdata.frame","text":"Converts numeric matrix data frame necessary format \"manual\" CPC() calculation.","code":""},{"path":"http://imehlhaff.net/CPC/reference/CPCdata.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Manipulation for CPC Calculation — CPCdata.frame","text":"","code":"CPCdata.frame(data, cols, clusters)"},{"path":"http://imehlhaff.net/CPC/reference/CPCdata.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Manipulation for CPC Calculation — CPCdata.frame","text":"data numeric n x k matrix data frame. cols columns data used calculating CPC(). clusters column data giving cluster membership.","code":""},{"path":"http://imehlhaff.net/CPC/reference/CPCdata.frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data Manipulation for CPC Calculation — CPCdata.frame","text":"Returns data frame dimensions identical data.","code":""},{"path":"http://imehlhaff.net/CPC/reference/CPCdata.frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data Manipulation for CPC Calculation — CPCdata.frame","text":"","code":"data <- matrix(c(rnorm(50, 0, 1), rnorm(50, 5, 1)), ncol = 2, byrow = TRUE) clusters <- matrix(c(rep(1, 25), rep(2, 25)), ncol = 1) data <- cbind(data, clusters) CPCdata.frame(data, 1:2, 3) #>              V1          V2 cluster #> 1   0.957533386 -1.72420107       1 #> 2   1.365638536 -0.65721061       1 #> 3   0.022561552 -1.84190143       1 #> 4  -0.305198077  1.08420954       1 #> 5  -0.404736936 -0.88994285       1 #> 6  -0.851209634 -1.40143080       1 #> 7  -0.302403304  1.78859112       1 #> 8   0.751327545  1.09732298       1 #> 9  -0.441861962 -1.06138043       1 #> 10 -0.510538687  2.70456606       1 #> 11  0.199663038  1.62645863       1 #> 12  0.157055216  0.51846962       1 #> 13  0.001443738 -0.75112330       1 #> 14  0.156278786  2.00024951       1 #> 15  0.495011020 -0.54560628       1 #> 16  1.869305764  0.19489256       1 #> 17 -1.115068983  1.48462229       1 #> 18  1.749031990 -0.08497431       1 #> 19  0.412081865 -0.64786340       1 #> 20 -0.073556712 -1.14905062       1 #> 21  1.278887443  0.21940848       1 #> 22  0.313491004  0.06807024       1 #> 23 -0.055961161  0.50451301       1 #> 24 -0.350546749 -0.48682101       1 #> 25  0.444220919  0.98825307       1 #> 26  5.244850551  4.29600147       2 #> 27  3.970373111  5.25211302       2 #> 28  6.042034916  4.76220035       2 #> 29  4.333479022  5.79491207       2 #> 30  5.279715120  5.69981334       2 #> 31  4.740810143  4.18026804       2 #> 32  5.519823453  3.04460324       2 #> 33  5.530032846  3.80193514       2 #> 34  4.160103482  5.91078530       2 #> 35  6.099418602  3.46873608       2 #> 36  5.364405888  7.52961688       2 #> 37  4.633577744  4.84937171       2 #> 38  4.387729359  6.06958353       2 #> 39  6.243491906  3.72679589       2 #> 40  5.599904530  5.89930744       2 #> 41  6.625567163  5.62235067       2 #> 42  5.674686393  5.05960624       2 #> 43  4.141751188  5.77169177       2 #> 44  4.592339119  5.62083794       2 #> 45  5.704765221  4.80204103       2 #> 46  4.512506716  6.35120770       2 #> 47  5.487827496  6.44890828       2 #> 48  5.197368115  4.90087991       2 #> 49  4.995892205  6.04437314       2 #> 50  4.677626352  4.31305996       2"},{"path":"http://imehlhaff.net/CPC/reference/Euclidean.html","id":null,"dir":"Reference","previous_headings":"","what":"Euclidean Distance from Dimension Means — Euclidean","title":"Euclidean Distance from Dimension Means — Euclidean","text":"Calculates two-dimensional Euclidean distance points dimension means.","code":""},{"path":"http://imehlhaff.net/CPC/reference/Euclidean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Euclidean Distance from Dimension Means — Euclidean","text":"","code":"Euclidean(data)"},{"path":"http://imehlhaff.net/CPC/reference/Euclidean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Euclidean Distance from Dimension Means — Euclidean","text":"data n x 2 matrix data frame.","code":""},{"path":"http://imehlhaff.net/CPC/reference/Euclidean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Euclidean Distance from Dimension Means — Euclidean","text":"Returns numeric vector length 1.","code":""},{"path":"http://imehlhaff.net/CPC/reference/Euclidean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Euclidean Distance from Dimension Means — Euclidean","text":"","code":"data <- matrix(c(rnorm(50, 0, 1), rnorm(50, 5, 1)), ncol = 2, byrow = TRUE)  Euclidean(data) #> [1] 3.704482"},{"path":"http://imehlhaff.net/CPC/reference/SS.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum-of-Squares Calculation — SS","title":"Sum-of-Squares Calculation — SS","text":"Calculates sums squares uni- multi-dimensional numeric data using distance matrix.","code":""},{"path":"http://imehlhaff.net/CPC/reference/SS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum-of-Squares Calculation — SS","text":"","code":"SS(data, ...)"},{"path":"http://imehlhaff.net/CPC/reference/SS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum-of-Squares Calculation — SS","text":"data numeric vector n x k matrix data frame. ... arguments passed dist().","code":""},{"path":"http://imehlhaff.net/CPC/reference/SS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sum-of-Squares Calculation — SS","text":"Returns numeric vector length 1.","code":""},{"path":"http://imehlhaff.net/CPC/reference/SS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sum-of-Squares Calculation — SS","text":"","code":"data <- matrix(c(rnorm(50, 0, 1), rnorm(50, 5, 1)), ncol = 2, byrow = TRUE) SS(data) #> [1] 654.1068"},{"path":"http://imehlhaff.net/CPC/reference/correlate.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for Bivariate Correlation — correlate","title":"Test for Bivariate Correlation — correlate","text":"Calculates correlation coefficient two variables returns list containing correlation estimate, standard error, p-value null-hypothesis significance test, number observations used.","code":""},{"path":"http://imehlhaff.net/CPC/reference/correlate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for Bivariate Correlation — correlate","text":"","code":"correlate(x, y, ...)"},{"path":"http://imehlhaff.net/CPC/reference/correlate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for Bivariate Correlation — correlate","text":"x numeric vector. y numeric vector. ... arguments passed cor.test().","code":""},{"path":"http://imehlhaff.net/CPC/reference/correlate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for Bivariate Correlation — correlate","text":"Returns list elements containing correlation coefficient estimate, associated standard error, p-value null-hypothesis significance test, number observations used, numeric vectors length 1.","code":""},{"path":"http://imehlhaff.net/CPC/reference/correlate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test for Bivariate Correlation — correlate","text":"Additional arguments alter type null hypothesis significance test, method used calculate correlation coefficient, confidence level, options passed correlate() inherited cor.test(). Note unlike cor.test(), arguments x y required.","code":""},{"path":"http://imehlhaff.net/CPC/reference/correlate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for Bivariate Correlation — correlate","text":"","code":"data <- matrix(c(rnorm(50, 0, 1), rnorm(50, 5, 1)), ncol = 2, byrow = TRUE)  correlate(data[, 1], data[, 2]) #> $estimate #> [1] 0.8690681 #>  #> $se #> [1] 0.0714027 #>  #> $`p-value` #> [1] 2.788195e-16 #>  #> $observations #> [1] 50 #>"},{"path":"http://imehlhaff.net/CPC/reference/diff_multidim.html","id":null,"dir":"Reference","previous_headings":"","what":"Multidimensional Difference-in-Means — diff_multidim","title":"Multidimensional Difference-in-Means — diff_multidim","text":"Calculates average Euclidean distance means arbitrary dimensions.","code":""},{"path":"http://imehlhaff.net/CPC/reference/diff_multidim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multidimensional Difference-in-Means — diff_multidim","text":"","code":"diff_multidim(data, cols, clusters)"},{"path":"http://imehlhaff.net/CPC/reference/diff_multidim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multidimensional Difference-in-Means — diff_multidim","text":"data numeric vector n x k matrix data frame containing vector identifying cluster membership observation, passed clusters argument. cols columns data used difference--means calculation. clusters column data indicating cluster membership observation.","code":""},{"path":"http://imehlhaff.net/CPC/reference/diff_multidim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multidimensional Difference-in-Means — diff_multidim","text":"Returns numeric vector length 1.","code":""},{"path":"http://imehlhaff.net/CPC/reference/diff_multidim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multidimensional Difference-in-Means — diff_multidim","text":"","code":"data <- matrix(c(rnorm(50, 0, 1), rnorm(50, 5, 1)), ncol = 2, byrow = TRUE) clusters <- matrix(c(rep(1, 25), rep(2, 25)), ncol = 1) data <- cbind(data, clusters)  diff_multidim(data, 1:2, 3) #> [1] 7.26616"},{"path":"http://imehlhaff.net/CPC/news/index.html","id":"cpc-240","dir":"Changelog","previous_headings":"","what":"CPC 2.4.0","title":"CPC 2.4.0","text":"Changes diff_multidim function allow calculation one-dimensional difference--means use column names function arguments. Streamlines data processing pipeline diff_multidim workhorse CPC functions. Bug fixes ensure preservation multicolumn data structure model-based CPC calculation. Adds automatic calculation standard deviation CPC estimates model=TRUE.","code":""},{"path":"http://imehlhaff.net/CPC/news/index.html","id":"cpc-230","dir":"Changelog","previous_headings":"","what":"CPC 2.3.0","title":"CPC 2.3.0","text":"CRAN release: 2022-11-01 Bug fixes improve handling missing data workhorse CPC function. Fixes issue generated dbscan dependency imports necessary functions packages. Adds diff_multidim function.","code":""},{"path":"http://imehlhaff.net/CPC/news/index.html","id":"cpc-221","dir":"Changelog","previous_headings":"","what":"CPC 2.2.1","title":"CPC 2.2.1","text":"CRAN release: 2022-06-01 Initial release CRAN.","code":""}]
